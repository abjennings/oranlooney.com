<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on OranLooney.com</title>
    <link>http://www.oranlooney.com/tags/math/</link>
    <description>Recent content in Math on OranLooney.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright 2018 Oran Looney</copyright>
    <lastBuildDate>Wed, 11 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.oranlooney.com/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Craps Variants</title>
      <link>http://www.oranlooney.com/post/craps-game-variants/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.oranlooney.com/post/craps-game-variants/</guid>
      <description>Anyone who&amp;rsquo;s ever calculated the chances of winning at craps may remember being surprised by how fair the game is.
(Spoiler Warning If you haven&amp;rsquo;t calculated these odds but feel you might enjoy the challenge, you should do so before reading on, because I&amp;rsquo;m about to spoil it for you rather thoroughly in the name of exploring a more general case. A full solution may also be found in the rather excellent book, Fifty Challenging Problems in Probability with Solutions.</description>
    </item>
    
    <item>
      <title>Complex Numbers in R, Part II</title>
      <link>http://www.oranlooney.com/post/complex-r-part-2/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.oranlooney.com/post/complex-r-part-2/</guid>
      <description>This post is part of a series on complex number functionality in the R programming language. You may want to read Part I before continuing if you are not already comfortable with the basics.
In Part I of this series, we dipped our toes in the water by explicitly creating some complex numbers and showing how they worked with the most basic mathematical operators, functions, and plots.
In this second part, we’ll take a more in-depth look at some scenarios where complex numbers arise naturally – where they are less of a choice an more of a necessity.</description>
    </item>
    
    <item>
      <title>Complex Numbers in R, Part I</title>
      <link>http://www.oranlooney.com/post/complex-r/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.oranlooney.com/post/complex-r/</guid>
      <description>R, like many scientific programming languages, has first-class support for complex numbers. And, just as in most other programming languages, this functionality is ignored by the vast majority of users.
Yet complex numbers can often offer surprisingly elegant formulations and solutions to problems. I want to convince you that familiarizing yourself with R’s excellent complex number functionality is well worth the effort and will pay off tenfold in two different ways: first by showing you how they are so amazingly useful you’ll want to go out of your way to use them, and then by showing you how they are so common and fundamental to modern analysis that you couldn’t avoid them if you wanted to.</description>
    </item>
    
  </channel>
</rss>